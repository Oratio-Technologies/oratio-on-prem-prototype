name: Deploy to PROD AKS Cluster

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.ACR_URL }}/frontendaks:${{ github.run_id }} -f .docker/Dockerfile.nginxfrontend .
          docker push ${{ secrets.ACR_URL }}/frontendaks:${{ github.run_id }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set the target AKS cluster
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.ACCOUNTANTS_AZURE_CREDENTIALS }}'
          cluster-name: ${{ secrets.ACCOUNTANTS_AKS_NAME }}
          resource-group: ${{ secrets.ACCOUNTANTS_RESOURCE_GROUP }}

      - name: Create Image Pull Secret
        uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ secrets.ACR_URL }}
          container-registry-username: ${{ secrets.ACR_USERNAME }}
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          secret-name: acr-auth

      - name: Deploy to Kubernetes
        run: |
          sed -i 's|IMAGE_PLACEHOLDER|${{ secrets.ACR_URL }}/frontendaks:${{ github.run_id }}|' infra/k8s/frontend-deployment.yml
          kubectl apply -f infra/k8s/frontend-deployment.yml -n ingress-basic-lawchatbot-namespace

      - name: Verify Deployment
        run: |
          kubectl get services  -n ingress-basic-lawchatbot-namespace
          kubectl get pods  -n ingress-basic-lawchatbot-namespace
